# Makefile.in generated by automake 1.15 from Makefile.am.
# lsf/cmdtools/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# b* parts
#


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/openlava
pkgincludedir = $(includedir)/openlava
pkglibdir = $(libdir)/openlava
pkglibexecdir = $(libexecdir)/openlava
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin15.5.0
host_triplet = x86_64-apple-darwin15.5.0
bin_PROGRAMS = badmin$(EXEEXT) bkill$(EXEEXT) bparams$(EXEEXT) \
	brestart$(EXEEXT) btop$(EXEEXT) bbot$(EXEEXT) bmgroup$(EXEEXT) \
	bpeek$(EXEEXT) brun$(EXEEXT) busers$(EXEEXT) bhosts$(EXEEXT) \
	bmig$(EXEEXT) bqueues$(EXEEXT) bsub$(EXEEXT) bjobs$(EXEEXT) \
	bmod$(EXEEXT) brequeue$(EXEEXT) bswitch$(EXEEXT) \
	bhist$(EXEEXT) lsacct$(EXEEXT) lseligible$(EXEEXT) \
	lshosts$(EXEEXT) lsid$(EXEEXT) lsinfo$(EXEEXT) \
	lsloadadj$(EXEEXT) lsload$(EXEEXT) lsmon$(EXEEXT) \
	lsplace$(EXEEXT) lsrcp$(EXEEXT) lsrun$(EXEEXT) \
	lsaddhost$(EXEEXT) lsrmhost$(EXEEXT)
subdir = lsf/cmdtools
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_badmin_OBJECTS = badmin.$(OBJEXT) cmd.bqc.$(OBJEXT) \
	cmd.hist.$(OBJEXT) cmd.bhc.$(OBJEXT) cmd.misc.$(OBJEXT) \
	cmd.job.$(OBJEXT) cmd.prt.$(OBJEXT)
badmin_OBJECTS = $(am_badmin_OBJECTS)
am__DEPENDENCIES_1 = ../lib/liblsbatch.a ../../lsf/lib/liblsf.a \
	../../lsf/intlib/liblsfint.a
badmin_DEPENDENCIES = ../../lsf/lsadm/startup.o $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_bbot_OBJECTS = bbot.$(OBJEXT) cmd.move.$(OBJEXT) \
	cmd.jobid.$(OBJEXT) cmd.misc.$(OBJEXT) cmd.prt.$(OBJEXT) \
	cmd.err.$(OBJEXT)
bbot_OBJECTS = $(am_bbot_OBJECTS)
bbot_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bhist_OBJECTS = bhist.$(OBJEXT) read.event.$(OBJEXT)
bhist_OBJECTS = $(am_bhist_OBJECTS)
bhist_DEPENDENCIES = cmd.job.o cmd.misc.o cmd.jobid.o cmd.prt.o \
	cmd.err.o cmd.hist.o $(am__DEPENDENCIES_1)
am_bhosts_OBJECTS = bhosts.$(OBJEXT) cmd.prt.$(OBJEXT) \
	cmd.misc.$(OBJEXT)
bhosts_OBJECTS = $(am_bhosts_OBJECTS)
bhosts_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bjobs_OBJECTS = bjobs.$(OBJEXT) cmd.prt.$(OBJEXT) cmd.err.$(OBJEXT) \
	cmd.job.$(OBJEXT) cmd.jobid.$(OBJEXT) cmd.misc.$(OBJEXT)
bjobs_OBJECTS = $(am_bjobs_OBJECTS)
bjobs_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bkill_OBJECTS = bkill.$(OBJEXT) cmd.sig.$(OBJEXT) \
	cmd.jobid.$(OBJEXT) cmd.err.$(OBJEXT)
bkill_OBJECTS = $(am_bkill_OBJECTS)
bkill_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bmgroup_OBJECTS = bmgroup.$(OBJEXT) cmd.misc.$(OBJEXT)
bmgroup_OBJECTS = $(am_bmgroup_OBJECTS)
bmgroup_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bmig_OBJECTS = bmig.$(OBJEXT) cmd.jobid.$(OBJEXT) cmd.err.$(OBJEXT)
bmig_OBJECTS = $(am_bmig_OBJECTS)
bmig_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bmod_OBJECTS = bmod.$(OBJEXT) cmd.sub.$(OBJEXT) cmd.jobid.$(OBJEXT) \
	cmd.err.$(OBJEXT)
bmod_OBJECTS = $(am_bmod_OBJECTS)
bmod_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bparams_OBJECTS = bparams.$(OBJEXT)
bparams_OBJECTS = $(am_bparams_OBJECTS)
bparams_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bpeek_OBJECTS = bpeek.$(OBJEXT) cmd.err.$(OBJEXT) \
	cmd.jobid.$(OBJEXT) cmd.misc.$(OBJEXT) cmd.prt.$(OBJEXT)
bpeek_OBJECTS = $(am_bpeek_OBJECTS)
bpeek_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bqueues_OBJECTS = bqueues.$(OBJEXT) cmd.prt.$(OBJEXT) \
	cmd.misc.$(OBJEXT)
bqueues_OBJECTS = $(am_bqueues_OBJECTS)
bqueues_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_brequeue_OBJECTS = brequeue.$(OBJEXT) cmd.jobid.$(OBJEXT) \
	cmd.err.$(OBJEXT)
brequeue_OBJECTS = $(am_brequeue_OBJECTS)
brequeue_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_brestart_OBJECTS = brestart.$(OBJEXT) cmd.sub.$(OBJEXT) \
	cmd.jobid.$(OBJEXT) cmd.err.$(OBJEXT)
brestart_OBJECTS = $(am_brestart_OBJECTS)
brestart_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_brun_OBJECTS = brun.$(OBJEXT) cmd.jobid.$(OBJEXT) cmd.err.$(OBJEXT)
brun_OBJECTS = $(am_brun_OBJECTS)
brun_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bsub_OBJECTS = bsub.$(OBJEXT) cmd.sub.$(OBJEXT) cmd.jobid.$(OBJEXT) \
	cmd.err.$(OBJEXT)
bsub_OBJECTS = $(am_bsub_OBJECTS)
bsub_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_bswitch_OBJECTS = bswitch.$(OBJEXT) cmd.jobid.$(OBJEXT) \
	cmd.err.$(OBJEXT)
bswitch_OBJECTS = $(am_bswitch_OBJECTS)
bswitch_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_btop_OBJECTS = btop.$(OBJEXT) cmd.move.$(OBJEXT) \
	cmd.jobid.$(OBJEXT) cmd.misc.$(OBJEXT) cmd.prt.$(OBJEXT) \
	cmd.err.$(OBJEXT)
btop_OBJECTS = $(am_btop_OBJECTS)
btop_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_busers_OBJECTS = busers.$(OBJEXT) cmd.misc.$(OBJEXT)
busers_OBJECTS = $(am_busers_OBJECTS)
busers_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_lsacct_OBJECTS = lsacct.$(OBJEXT)
lsacct_OBJECTS = $(am_lsacct_OBJECTS)
lsacct_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsaddhost_OBJECTS = lsaddhost.$(OBJEXT)
lsaddhost_OBJECTS = $(am_lsaddhost_OBJECTS)
lsaddhost_DEPENDENCIES = ../lib/liblsf.a
am_lseligible_OBJECTS = lseligible.$(OBJEXT)
lseligible_OBJECTS = $(am_lseligible_OBJECTS)
lseligible_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lshosts_OBJECTS = lshosts.$(OBJEXT)
lshosts_OBJECTS = $(am_lshosts_OBJECTS)
lshosts_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsid_OBJECTS = lsid.$(OBJEXT)
lsid_OBJECTS = $(am_lsid_OBJECTS)
lsid_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsinfo_OBJECTS = lsinfo.$(OBJEXT)
lsinfo_OBJECTS = $(am_lsinfo_OBJECTS)
lsinfo_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsload_OBJECTS = lsload.$(OBJEXT) load.$(OBJEXT)
lsload_OBJECTS = $(am_lsload_OBJECTS)
lsload_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsloadadj_OBJECTS = lsloadadj.$(OBJEXT)
lsloadadj_OBJECTS = $(am_lsloadadj_OBJECTS)
lsloadadj_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsmon_OBJECTS = lsmon.$(OBJEXT)
lsmon_OBJECTS = $(am_lsmon_OBJECTS)
lsmon_DEPENDENCIES = load.o ../lib/liblsf.a ../intlib/liblsfint.a
am_lsplace_OBJECTS = lsplace.$(OBJEXT)
lsplace_OBJECTS = $(am_lsplace_OBJECTS)
lsplace_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsrcp_OBJECTS = lsrcp.$(OBJEXT)
lsrcp_OBJECTS = $(am_lsrcp_OBJECTS)
lsrcp_DEPENDENCIES = ../lib/liblsf.a ../intlib/liblsfint.a
am_lsrmhost_OBJECTS = lsrmhost.$(OBJEXT)
lsrmhost_OBJECTS = $(am_lsrmhost_OBJECTS)
lsrmhost_DEPENDENCIES = ../lib/liblsf.a
am_lsrun_OBJECTS = lsrun.$(OBJEXT)
lsrun_OBJECTS = $(am_lsrun_OBJECTS)
lsrun_DEPENDENCIES = ../lib/liblsf.a
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(badmin_SOURCES) $(bbot_SOURCES) $(bhist_SOURCES) \
	$(bhosts_SOURCES) $(bjobs_SOURCES) $(bkill_SOURCES) \
	$(bmgroup_SOURCES) $(bmig_SOURCES) $(bmod_SOURCES) \
	$(bparams_SOURCES) $(bpeek_SOURCES) $(bqueues_SOURCES) \
	$(brequeue_SOURCES) $(brestart_SOURCES) $(brun_SOURCES) \
	$(bsub_SOURCES) $(bswitch_SOURCES) $(btop_SOURCES) \
	$(busers_SOURCES) $(lsacct_SOURCES) $(lsaddhost_SOURCES) \
	$(lseligible_SOURCES) $(lshosts_SOURCES) $(lsid_SOURCES) \
	$(lsinfo_SOURCES) $(lsload_SOURCES) $(lsloadadj_SOURCES) \
	$(lsmon_SOURCES) $(lsplace_SOURCES) $(lsrcp_SOURCES) \
	$(lsrmhost_SOURCES) $(lsrun_SOURCES)
DIST_SOURCES = $(badmin_SOURCES) $(bbot_SOURCES) $(bhist_SOURCES) \
	$(bhosts_SOURCES) $(bjobs_SOURCES) $(bkill_SOURCES) \
	$(bmgroup_SOURCES) $(bmig_SOURCES) $(bmod_SOURCES) \
	$(bparams_SOURCES) $(bpeek_SOURCES) $(bqueues_SOURCES) \
	$(brequeue_SOURCES) $(brestart_SOURCES) $(brun_SOURCES) \
	$(bsub_SOURCES) $(bswitch_SOURCES) $(btop_SOURCES) \
	$(busers_SOURCES) $(lsacct_SOURCES) $(lsaddhost_SOURCES) \
	$(lseligible_SOURCES) $(lshosts_SOURCES) $(lsid_SOURCES) \
	$(lsinfo_SOURCES) $(lsload_SOURCES) $(lsloadadj_SOURCES) \
	$(lsmon_SOURCES) $(lsplace_SOURCES) $(lsrcp_SOURCES) \
	$(lsrmhost_SOURCES) $(lsrun_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp ChangeLog
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/gmarselis/src/openlava/src/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/gmarselis/src/openlava/src/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /Users/gmarselis/src/openlava/src/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /Users/gmarselis/src/openlava/src/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /opt/local/bin/grep -E
EXEEXT = 
FGREP = /opt/local/bin/grep -F
GREP = /opt/local/bin/grep
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBOBJS =  ${LIBOBJDIR}error$U.o ${LIBOBJDIR}lstat$U.o ${LIBOBJDIR}mktime$U.o
LIBS = -lncurses -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo ${LIBOBJDIR}lstat$U.lo ${LIBOBJDIR}mktime$U.lo
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /Users/gmarselis/src/openlava/src/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /opt/local/bin/gmkdir -p
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = openlava
PACKAGE_BUGREPORT = george@marsel.is
PACKAGE_NAME = openlava
PACKAGE_STRING = openlava 0
PACKAGE_TARNAME = openlava
PACKAGE_URL = https://marsel.is/openlava
PACKAGE_VERSION = 0
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /opt/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0
abs_builddir = /Users/gmarselis/src/openlava/src/lsf/cmdtools
abs_srcdir = /Users/gmarselis/src/openlava/src/lsf/cmdtools
abs_top_builddir = /Users/gmarselis/src/openlava/src
abs_top_srcdir = /Users/gmarselis/src/openlava/src
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin15.5.0
build_alias = 
build_cpu = x86_64
build_os = darwin15.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin15.5.0
host_alias = 
host_cpu = x86_64
host_os = darwin15.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/gmarselis/src/openlava/src/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#include $(top_srcdir)/common.mk
# contencts of common.mk
AM_CPPFLAGS = -DSYSCONFDIR=\"${sysconfdir}\" -I$(top_srcdir)/lsf/include
COMMONSTUFF = ../lib/liblsbatch.a ../../lsf/lib/liblsf.a ../../lsf/intlib/liblsfint.a -lm

# ifndef cygwin
badmin_LDADD = -lnsl ../../lsf/lsadm/startup.o $(COMMONSTUFF)
bkill_LDADD = -lnsl $(COMMONSTUFF)
bparams_LDADD = -lnsl $(COMMONSTUFF)
brestart_LDADD = -lnsl $(COMMONSTUFF)
btop_LDADD = -lnsl $(COMMONSTUFF)
bbot_LDADD = -lnsl $(COMMONSTUFF)
bmgroup_LDADD = -lnsl $(COMMONSTUFF)
bpeek_LDADD = -lnsl $(COMMONSTUFF)
brun_LDADD = -lnsl $(COMMONSTUFF)
busers_LDADD = -lnsl $(COMMONSTUFF)
bhosts_LDADD = -lnsl $(COMMONSTUFF)
bmig_LDADD = -lnsl $(COMMONSTUFF)
bqueues_LDADD = -lnsl $(COMMONSTUFF)
bsub_LDADD = -lnsl $(COMMONSTUFF)
bjobs_LDADD = -lnsl $(COMMONSTUFF)
bmod_LDADD = -lnsl $(COMMONSTUFF)
bhist_LDADD = -lnsl cmd.job.o cmd.misc.o cmd.jobid.o cmd.prt.o cmd.err.o cmd.hist.o $(COMMONSTUFF)
brequeue_LDADD = -lnsl $(COMMONSTUFF)
bswitch_LDADD = -lnsl $(COMMONSTUFF)
# endif
badmin_SOURCES = badmin.c cmd.bqc.c cmd.hist.c cmd.bhc.c cmd.misc.c cmd.job.c cmd.prt.c badmin.h cmd.h
bkill_SOURCES = bkill.c cmd.sig.c cmd.jobid.c cmd.err.c
bparams_SOURCES = bparams.c cmd.h
brestart_SOURCES = brestart.c cmd.sub.c cmd.jobid.c cmd.err.c cmd.h
btop_SOURCES = btop.c cmd.move.c cmd.jobid.c cmd.misc.c cmd.prt.c cmd.err.c cmd.h
bbot_SOURCES = bbot.c cmd.move.c cmd.jobid.c cmd.misc.c cmd.prt.c cmd.err.c cmd.h
bmgroup_SOURCES = bmgroup.c cmd.misc.c cmd.h
bpeek_SOURCES = bpeek.c cmd.err.c cmd.jobid.c cmd.misc.c cmd.prt.c cmd.h
brun_SOURCES = brun.c cmd.jobid.c cmd.err.c cmd.h
busers_SOURCES = busers.c cmd.misc.c
bhosts_SOURCES = bhosts.c cmd.prt.c cmd.misc.c cmd.h
bmig_SOURCES = bmig.c cmd.jobid.c cmd.err.c cmd.h
bqueues_SOURCES = bqueues.c cmd.prt.c cmd.misc.c cmd.h
bsub_SOURCES = bsub.c cmd.sub.c cmd.jobid.c cmd.err.c cmd.h
bjobs_SOURCES = bjobs.c cmd.prt.c cmd.err.c cmd.job.c cmd.jobid.c cmd.misc.c cmd.h
bmod_SOURCES = bmod.c cmd.sub.c cmd.jobid.c cmd.err.c cmd.h
brequeue_SOURCES = brequeue.c cmd.jobid.c cmd.err.c cmd.h
bswitch_SOURCES = bswitch.c cmd.jobid.c cmd.err.c cmd.h
bhist_SOURCES = bhist.c read.event.c bhist.h
lsacct_SOURCES = lsacct.c  
lsacct_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lseligible_SOURCES = lseligible.c  
lseligible_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lshosts_SOURCES = lshosts.c  
lshosts_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lsid_SOURCES = lsid.c  
lsid_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lsinfo_SOURCES = lsinfo.c  
lsinfo_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lsloadadj_SOURCES = lsloadadj.c  
lsloadadj_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lsload_SOURCES = lsload.c load.c
lsload_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lsmon_SOURCES = lsmon.c  
lsmon_LDADD = load.o ../lib/liblsf.a ../intlib/liblsfint.a -lncurses
lsplace_SOURCES = lsplace.c  
lsplace_LDADD = ../lib/liblsf.a ../intlib/liblsfint.a
lsrcp_SOURCES = lsrcp.c
lsrcp_LDADD = -lnsl ../lib/liblsf.a ../intlib/liblsfint.a 
lsrun_SOURCES = lsrun.c
lsrun_LDADD = ../lib/liblsf.a 
lsaddhost_SOURCES = lsaddhost.c
lsaddhost_LDADD = ../lib/liblsf.a 
lsrmhost_SOURCES = lsrmhost.c
lsrmhost_LDADD = ../lib/liblsf.a
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lsf/cmdtools/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lsf/cmdtools/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

badmin$(EXEEXT): $(badmin_OBJECTS) $(badmin_DEPENDENCIES) $(EXTRA_badmin_DEPENDENCIES) 
	@rm -f badmin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badmin_OBJECTS) $(badmin_LDADD) $(LIBS)

bbot$(EXEEXT): $(bbot_OBJECTS) $(bbot_DEPENDENCIES) $(EXTRA_bbot_DEPENDENCIES) 
	@rm -f bbot$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bbot_OBJECTS) $(bbot_LDADD) $(LIBS)

bhist$(EXEEXT): $(bhist_OBJECTS) $(bhist_DEPENDENCIES) $(EXTRA_bhist_DEPENDENCIES) 
	@rm -f bhist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bhist_OBJECTS) $(bhist_LDADD) $(LIBS)

bhosts$(EXEEXT): $(bhosts_OBJECTS) $(bhosts_DEPENDENCIES) $(EXTRA_bhosts_DEPENDENCIES) 
	@rm -f bhosts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bhosts_OBJECTS) $(bhosts_LDADD) $(LIBS)

bjobs$(EXEEXT): $(bjobs_OBJECTS) $(bjobs_DEPENDENCIES) $(EXTRA_bjobs_DEPENDENCIES) 
	@rm -f bjobs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bjobs_OBJECTS) $(bjobs_LDADD) $(LIBS)

bkill$(EXEEXT): $(bkill_OBJECTS) $(bkill_DEPENDENCIES) $(EXTRA_bkill_DEPENDENCIES) 
	@rm -f bkill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bkill_OBJECTS) $(bkill_LDADD) $(LIBS)

bmgroup$(EXEEXT): $(bmgroup_OBJECTS) $(bmgroup_DEPENDENCIES) $(EXTRA_bmgroup_DEPENDENCIES) 
	@rm -f bmgroup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bmgroup_OBJECTS) $(bmgroup_LDADD) $(LIBS)

bmig$(EXEEXT): $(bmig_OBJECTS) $(bmig_DEPENDENCIES) $(EXTRA_bmig_DEPENDENCIES) 
	@rm -f bmig$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bmig_OBJECTS) $(bmig_LDADD) $(LIBS)

bmod$(EXEEXT): $(bmod_OBJECTS) $(bmod_DEPENDENCIES) $(EXTRA_bmod_DEPENDENCIES) 
	@rm -f bmod$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bmod_OBJECTS) $(bmod_LDADD) $(LIBS)

bparams$(EXEEXT): $(bparams_OBJECTS) $(bparams_DEPENDENCIES) $(EXTRA_bparams_DEPENDENCIES) 
	@rm -f bparams$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bparams_OBJECTS) $(bparams_LDADD) $(LIBS)

bpeek$(EXEEXT): $(bpeek_OBJECTS) $(bpeek_DEPENDENCIES) $(EXTRA_bpeek_DEPENDENCIES) 
	@rm -f bpeek$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bpeek_OBJECTS) $(bpeek_LDADD) $(LIBS)

bqueues$(EXEEXT): $(bqueues_OBJECTS) $(bqueues_DEPENDENCIES) $(EXTRA_bqueues_DEPENDENCIES) 
	@rm -f bqueues$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bqueues_OBJECTS) $(bqueues_LDADD) $(LIBS)

brequeue$(EXEEXT): $(brequeue_OBJECTS) $(brequeue_DEPENDENCIES) $(EXTRA_brequeue_DEPENDENCIES) 
	@rm -f brequeue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(brequeue_OBJECTS) $(brequeue_LDADD) $(LIBS)

brestart$(EXEEXT): $(brestart_OBJECTS) $(brestart_DEPENDENCIES) $(EXTRA_brestart_DEPENDENCIES) 
	@rm -f brestart$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(brestart_OBJECTS) $(brestart_LDADD) $(LIBS)

brun$(EXEEXT): $(brun_OBJECTS) $(brun_DEPENDENCIES) $(EXTRA_brun_DEPENDENCIES) 
	@rm -f brun$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(brun_OBJECTS) $(brun_LDADD) $(LIBS)

bsub$(EXEEXT): $(bsub_OBJECTS) $(bsub_DEPENDENCIES) $(EXTRA_bsub_DEPENDENCIES) 
	@rm -f bsub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsub_OBJECTS) $(bsub_LDADD) $(LIBS)

bswitch$(EXEEXT): $(bswitch_OBJECTS) $(bswitch_DEPENDENCIES) $(EXTRA_bswitch_DEPENDENCIES) 
	@rm -f bswitch$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bswitch_OBJECTS) $(bswitch_LDADD) $(LIBS)

btop$(EXEEXT): $(btop_OBJECTS) $(btop_DEPENDENCIES) $(EXTRA_btop_DEPENDENCIES) 
	@rm -f btop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(btop_OBJECTS) $(btop_LDADD) $(LIBS)

busers$(EXEEXT): $(busers_OBJECTS) $(busers_DEPENDENCIES) $(EXTRA_busers_DEPENDENCIES) 
	@rm -f busers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(busers_OBJECTS) $(busers_LDADD) $(LIBS)

lsacct$(EXEEXT): $(lsacct_OBJECTS) $(lsacct_DEPENDENCIES) $(EXTRA_lsacct_DEPENDENCIES) 
	@rm -f lsacct$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsacct_OBJECTS) $(lsacct_LDADD) $(LIBS)

lsaddhost$(EXEEXT): $(lsaddhost_OBJECTS) $(lsaddhost_DEPENDENCIES) $(EXTRA_lsaddhost_DEPENDENCIES) 
	@rm -f lsaddhost$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsaddhost_OBJECTS) $(lsaddhost_LDADD) $(LIBS)

lseligible$(EXEEXT): $(lseligible_OBJECTS) $(lseligible_DEPENDENCIES) $(EXTRA_lseligible_DEPENDENCIES) 
	@rm -f lseligible$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lseligible_OBJECTS) $(lseligible_LDADD) $(LIBS)

lshosts$(EXEEXT): $(lshosts_OBJECTS) $(lshosts_DEPENDENCIES) $(EXTRA_lshosts_DEPENDENCIES) 
	@rm -f lshosts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lshosts_OBJECTS) $(lshosts_LDADD) $(LIBS)

lsid$(EXEEXT): $(lsid_OBJECTS) $(lsid_DEPENDENCIES) $(EXTRA_lsid_DEPENDENCIES) 
	@rm -f lsid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsid_OBJECTS) $(lsid_LDADD) $(LIBS)

lsinfo$(EXEEXT): $(lsinfo_OBJECTS) $(lsinfo_DEPENDENCIES) $(EXTRA_lsinfo_DEPENDENCIES) 
	@rm -f lsinfo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsinfo_OBJECTS) $(lsinfo_LDADD) $(LIBS)

lsload$(EXEEXT): $(lsload_OBJECTS) $(lsload_DEPENDENCIES) $(EXTRA_lsload_DEPENDENCIES) 
	@rm -f lsload$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsload_OBJECTS) $(lsload_LDADD) $(LIBS)

lsloadadj$(EXEEXT): $(lsloadadj_OBJECTS) $(lsloadadj_DEPENDENCIES) $(EXTRA_lsloadadj_DEPENDENCIES) 
	@rm -f lsloadadj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsloadadj_OBJECTS) $(lsloadadj_LDADD) $(LIBS)

lsmon$(EXEEXT): $(lsmon_OBJECTS) $(lsmon_DEPENDENCIES) $(EXTRA_lsmon_DEPENDENCIES) 
	@rm -f lsmon$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsmon_OBJECTS) $(lsmon_LDADD) $(LIBS)

lsplace$(EXEEXT): $(lsplace_OBJECTS) $(lsplace_DEPENDENCIES) $(EXTRA_lsplace_DEPENDENCIES) 
	@rm -f lsplace$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsplace_OBJECTS) $(lsplace_LDADD) $(LIBS)

lsrcp$(EXEEXT): $(lsrcp_OBJECTS) $(lsrcp_DEPENDENCIES) $(EXTRA_lsrcp_DEPENDENCIES) 
	@rm -f lsrcp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsrcp_OBJECTS) $(lsrcp_LDADD) $(LIBS)

lsrmhost$(EXEEXT): $(lsrmhost_OBJECTS) $(lsrmhost_DEPENDENCIES) $(EXTRA_lsrmhost_DEPENDENCIES) 
	@rm -f lsrmhost$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsrmhost_OBJECTS) $(lsrmhost_LDADD) $(LIBS)

lsrun$(EXEEXT): $(lsrun_OBJECTS) $(lsrun_DEPENDENCIES) $(EXTRA_lsrun_DEPENDENCIES) 
	@rm -f lsrun$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsrun_OBJECTS) $(lsrun_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/badmin.Po
include ./$(DEPDIR)/bbot.Po
include ./$(DEPDIR)/bhist.Po
include ./$(DEPDIR)/bhosts.Po
include ./$(DEPDIR)/bjobs.Po
include ./$(DEPDIR)/bkill.Po
include ./$(DEPDIR)/bmgroup.Po
include ./$(DEPDIR)/bmig.Po
include ./$(DEPDIR)/bmod.Po
include ./$(DEPDIR)/bparams.Po
include ./$(DEPDIR)/bpeek.Po
include ./$(DEPDIR)/bqueues.Po
include ./$(DEPDIR)/brequeue.Po
include ./$(DEPDIR)/brestart.Po
include ./$(DEPDIR)/brun.Po
include ./$(DEPDIR)/bsub.Po
include ./$(DEPDIR)/bswitch.Po
include ./$(DEPDIR)/btop.Po
include ./$(DEPDIR)/busers.Po
include ./$(DEPDIR)/cmd.bhc.Po
include ./$(DEPDIR)/cmd.bqc.Po
include ./$(DEPDIR)/cmd.err.Po
include ./$(DEPDIR)/cmd.hist.Po
include ./$(DEPDIR)/cmd.job.Po
include ./$(DEPDIR)/cmd.jobid.Po
include ./$(DEPDIR)/cmd.misc.Po
include ./$(DEPDIR)/cmd.move.Po
include ./$(DEPDIR)/cmd.prt.Po
include ./$(DEPDIR)/cmd.sig.Po
include ./$(DEPDIR)/cmd.sub.Po
include ./$(DEPDIR)/load.Po
include ./$(DEPDIR)/lsacct.Po
include ./$(DEPDIR)/lsaddhost.Po
include ./$(DEPDIR)/lseligible.Po
include ./$(DEPDIR)/lshosts.Po
include ./$(DEPDIR)/lsid.Po
include ./$(DEPDIR)/lsinfo.Po
include ./$(DEPDIR)/lsload.Po
include ./$(DEPDIR)/lsloadadj.Po
include ./$(DEPDIR)/lsmon.Po
include ./$(DEPDIR)/lsplace.Po
include ./$(DEPDIR)/lsrcp.Po
include ./$(DEPDIR)/lsrmhost.Po
include ./$(DEPDIR)/lsrun.Po
include ./$(DEPDIR)/read.event.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-data-local install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


install-data-local:
	cd "$(DESTDIR)$(bindir)" && ln -sf bkill bstop
	cd "$(DESTDIR)$(bindir)" && ln -sf bkill bresume
	cd "$(DESTDIR)$(bindir)" && ln -sf bkill bchkpnt
	cd "$(DESTDIR)$(bindir)" && ln -sf bmgroup bugroup

etags :
	etags *.[hc] ../*.h ../lib/*.[hc] ../../lsf/*.h ../../lsf/lib/*.[hc] \
	../../lsf/intlib/*.[hc]
etags :
	etags *.[hc] ../*.h ../lib/*.[hc]

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
